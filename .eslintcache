[{"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/index.js":"1","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/App.js":"2","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/home.js":"3","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/about.js":"4","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/includes/navbar.js":"5","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/login.js":"6","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/register.js":"7","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/splash.js":"8","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/components/register.js":"9","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/components/login.js":"10","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/includes/firebase.js":"11","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/main.js":"12","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/components/main.js":"13","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/components/splash.js":"14"},{"size":196,"mtime":1610521551433,"results":"15","hashOfConfig":"16"},{"size":843,"mtime":1610857845290,"results":"17","hashOfConfig":"16"},{"size":5562,"mtime":1610896553547,"results":"18","hashOfConfig":"16"},{"size":1237,"mtime":1610897324923,"results":"19","hashOfConfig":"16"},{"size":1092,"mtime":1610545194485,"results":"20","hashOfConfig":"16"},{"size":4026,"mtime":1610862248374,"results":"21","hashOfConfig":"16"},{"size":3779,"mtime":1610695854349,"results":"22","hashOfConfig":"16"},{"size":1521,"mtime":1610868108914,"results":"23","hashOfConfig":"16"},{"size":254,"mtime":1610691007514,"results":"24","hashOfConfig":"16"},{"size":378,"mtime":1610706374589,"results":"25","hashOfConfig":"16"},{"size":498,"mtime":1610608041979,"results":"26","hashOfConfig":"16"},{"size":10376,"mtime":1610885826973,"results":"27","hashOfConfig":"16"},{"size":1063,"mtime":1610882698593,"results":"28","hashOfConfig":"16"},{"size":218,"mtime":1610867792032,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"kngbdk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/index.js",[],["62","63"],"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/App.js",[],"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/home.js",[],"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/about.js",[],"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/includes/navbar.js",[],"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/login.js",["64"],"import React, { Component } from 'react';\nimport Navbar from '../includes/navbar';\nimport {NavLink, Redirect} from 'react-router-dom';\nimport {signInWithGoogle, loginHandler} from '../components/login';\nimport '../css/login.css';\n\nexport default class login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            redirect: false,\n            userDetails: {},\n        };\n    }\n    componentDidMount() {\n        document.body.style.backgroundColor = \"#f4f4f8\";\n    }\n    render() {\n        return (\n            <div>\n                <div id=\"loginmain\" >\n                    <Navbar />\n                    <div className=\"wrapper\">\n                        <div id=\"loginform\">\n                            <div class=\"form-group\">\n                                <label for=\"email\">Email address:</label>\n                                <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" id=\"email\" onChange={(event) => this.setState({email: event.target.value})} required/>\n                            </div>\n                            <button \n                                onClick={() => \n                                    loginHandler(this.state.email)\n                                    .then((loginData) => {\n                                        if(loginData.data === 'notRegistered') {\n                                            alert(\"Email not registered. Please register now to continue\");\n                                        } else if(loginData.data === 'extra') {\n                                            alert(\"This email is registered more than once. Please contact admin to continue\");\n                                        } else {\n                                            localStorage.setItem('myDiId', loginData.data.user_id);\n                                            this.setState({userDetails: loginData.data}, () => this.props.history.push('/main', loginData.data));\n                                        }\n                                    })} \n                                type=\"submit\" \n                                className=\"btn btn-block\"\n                            >\n                                Login\n                            </button>\n                            <button \n                                onClick={() => {\n                                    signInWithGoogle().then((data) => {\n                                        loginHandler(data.additionalUserInfo.profile.email)\n                                        .then((loginData) => {\n                                            if(loginData.data === 'notRegistered') {\n                                                alert(\"Email not registered. Please register now to continue\");\n                                            } else if(loginData.data === 'extra') {\n                                                alert(\"This email is registered more than once. Please contact admin to continue\");\n                                            } else {\n                                                this.setState({userDetails: loginData}, () => this.props.history.push('/main'));\n                                            }\n                                        });\n                                    });\n                                }} \n                                type=\"submit\" \n                                className=\"btn btn-block\" \n                                style={{backgroundColor: '#fff', color: '#fe4a49'}}\n                            >\n                                Login with google\n                            </button>  \n                            <NavLink className=\"registerlink\" to=\"/register\">Not yet registered? Register now</NavLink>\n                        </div>\n                    </div>\n                </div>\n                <footer>\n                    <p>di.com - copyright &copy; 2021 </p>\n                </footer>\n            </div>\n        )\n    }\n}\n","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/register.js",[],"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/splash.js",["65"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getUserDetails } from '../components/splash';\nvar Spinner = require('react-spinkit');\n\nexport default class splash extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectHome: false,\n            redirectMain: false,\n        };\n    }\n    componentDidMount(){\n        this.id = setTimeout(() => {\n            if(localStorage.getItem('myDiId') === null) {\n                this.props.history.push('/home');\n            } else if(localStorage.getItem('myDiId') !== null) {\n                getUserDetails(localStorage.getItem('myDiId')).then((loginData) => {\n                    console.log(loginData);\n                    if(loginData.data === 'notexists') {\n                        this.props.history.push('/home');\n                    } else {\n                        this.props.history.push('/main', loginData.data)\n                    }\n                });\n            }\n        }, 8000);\n        //console.log('on splash screen', localStorage.getItem('myDiId'));\n    }\n    componentWillUnmount() {\n        clearTimeout(this.id);  \n    }\n    render() {\n        return(\n            <div>\n                <div style={{display: 'flex', height: '100vh', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n                        <Spinner name=\"line-scale-pulse-out-rapid\" color=\"#fe4a49\" />\n                </div>\n            </div>\n        )\n    }\n}\n","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/components/register.js",[],"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/components/login.js",[],"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/includes/firebase.js",[],"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/containers/main.js",["66","67","68","69","70"],"import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {getAllChats, checkEmail, inviteFriend, getSingleChats} from '../components/main';\nimport '../css/main.css';\n\nexport default class main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            newmsg: false,\n            redirect: false,\n            showemailbox: false,\n            invitationEmail: '',\n            userDetails: {},\n            chats: [],\n            finalChats: [],\n            singleChat: [],\n            showSingleChat: false,\n        }\n    }\n    componentDidMount() {\n        if(localStorage.getItem('myDiId') !== null) {\n            this.setState({userDetails: this.props.location.state}, () => {\n                this.id = setInterval(() => {\n                    getAllChats(this.state.userDetails.user_id)\n                    .then((chats) => {\n                        this.setState({chats: chats.data}, () => {\n                            var result = this.state.chats.filter(function (a) {\n                                var key = a.receiverUserId + '|' + a.senderUserId;\n                                if (!this[key]) {\n                                    this[key] = true;\n                                    return true;\n                                }\n                            }, Object.create(null));\n                            this.setState({finalChats: result}, () => console.log(this.state.finalChats));\n                        });\n                    });\n                }, 1000);\n            });\n        } else{\n            alert(\"Please login to chat\");\n            this.props.history.push('/login');\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"mainContainer\">\n                    <div className=\"row1\">\n                        <div className=\"logo\">\n                            <div class=\"dropdown\">\n                                <svg data-toggle=\"dropdown\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"25\" fill=\"#fff\" className=\"bi bi-three-dots-vertical menu dropdown-toggle\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"/>\n                                </svg>\n                                <div className=\"dropdown-menu\">\n                                    <a className=\"dropdown-item\" onClick = {() => this.setState({showemailbox: true})}>Invite a friend</a>\n                                    <a className=\"dropdown-item\" href=\"#\">Create group</a>\n                                    <a className=\"dropdown-item\" onClick={() => {\n                                        localStorage.removeItem('myDiId');\n                                        this.setState({redirect: true}, () => clearInterval(this.id));\n                                    }}>\n                                        Logout\n                                    </a>\n                                </div>\n                            </div>\n                            <span>dI</span>\n                        </div>\n                        <span>{this.state.userDetails.username}</span>\n                    </div>\n                    <div className=\"row2\">\n                        <div id=\"chatCandidates\">\n                            {this.state.showemailbox ? \n                                <div style={{backgroundColor: '#fff'}}>\n                                    <input \n                                        onChange={(e) => this.setState({invitationEmail: e.target.value})} \n                                        type=\"email\" placeholder=\"Enter email\" \n                                        className=\"form-control\" \n                                        style={{margin: '3px'}}\n                                    />\n                                    <input\n                                        onClick={() => {\n                                            if(this.state.invitationEmail === '') {\n                                                alert('Please enter a valid email');\n                                            }  else {\n                                                checkEmail(this.state.invitationEmail).then((receiverDetails) => {\n                                                    if(receiverDetails.data === 'notRegistered') {\n                                                        alert(\"email is not registered\");\n                                                    } else {\n                                                        const chatDetails = {\n                                                            message: `${this.state.userDetails.username} invited you to start chat`,\n                                                            senderId: `${this.state.userDetails.user_id}`,\n                                                            senderName: `${this.state.userDetails.username}`,\n                                                            receiverId: `${receiverDetails.data.user_id}`,\n                                                            receiverName: `${receiverDetails.data.username}`,\n                                                        }\n                                                        inviteFriend(chatDetails).then((chatData) => {\n                                                            console.log(chatData);\n                                                            alert('invitation sent succesfully');\n                                                        });\n                                                    }\n                                                });\n                                            }\n                                        }} \n                                        value=\"invite\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        style={{margin: '3px'}}\n                                    />\n                                    <input\n                                        onClick={() => this.setState({showemailbox: false})} \n                                        value=\"cancel\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        style={{margin: '3px', color: '#000', backgroundColor: '#fff'}}\n                                    />\n                                </div>\n                            : null}\n                            {this.state.finalChats.map((chat, index) => {\n                                if(chat.message !== null || chat.senderName !== null || chat.receiverName !== null) {\n                                    if(chat.receiverUserId !== this.state.userDetails.user_id) {\n                                        return(<div key={index} className=\"list\" onClick={() => getSingleChats(chat.senderUserId, chat.receiverUserId).then((singleMesssage) => this.setState({singleChat: singleMesssage.data, showSingleChat: true}))}>\n                                            <div id=\"user\">\n                                                <span>{chat.receiverName}</span>\n                                                {this.state.newmsg ? \n                                                    <span className=\"badge badge-pill badge-primary\">1</span>\n                                                : null}\n                                            </div>\n                                            <div id=\"msgextract\">{chat.message}</div>\n                                        </div>)\n                                    } else if(chat.senderUserId !== this.state.userDetails.user_id) {\n                                        return (<div key={index} className=\"list\" onClick={() => getSingleChats(chat.senderUserId, chat.receiverUserId).then((singleMesssage) => this.setState({singleChat: singleMesssage.data, showSingleChat: true}))}>\n                                            <div id=\"user\">\n                                                <span>{chat.senderName}</span>\n                                                {this.state.newmsg ? \n                                                    <span className=\"badge badge-pill badge-primary\">1</span>\n                                                : null}\n                                            </div>\n                                            <div id=\"msgextract\">{chat.message}</div>\n                                        </div>)\n                                    }\n                                }\n                            })}\n                        </div>\n                        {this.state.showSingleChat ?\n                            <div id=\"messageView\">\n                                <div id=\"messages\"> \n                                    {this.state.singleChat.map((chat, index) => {\n                                        return <div key={index}>{chat.message}</div>\n                                    })}\n                                </div>\n                                <div id=\"chatbox\">\n                                    <div className=\"elements\">\n                                        <input type=\"text\" onChange={(e) => this.setState({message: e.target.value})} placeholder=\"your message\" />\n                                        <span onClick={() => alert(this.state.message)}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" fill=\"#fe4a49\" className=\"bi bi-cursor-fill send\" viewBox=\"0 0 16 16\">\n                                                <path d=\"M14.082 2.182a.5.5 0 0 1 .103.557L8.528 15.467a.5.5 0 0 1-.917-.007L5.57 10.694.803 8.652a.5.5 0 0 1-.006-.916l12.728-5.657a.5.5 0 0 1 .556.103z\"/>\n                                            </svg>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        : null}\n                    </div>\n                </div>\n                {this.state.redirect ? <Redirect to=\"/home\" /> : null}\n            </div>     \n        )\n    }\n}\n","/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/components/main.js",[],"/home/tumulvikash/Downloads/backup/vtu notes/college-7th sem/WTALAB/miniproject/di/src/components/splash.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":18,"nodeType":"77","messageId":"78","endLine":3,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":29,"column":66,"nodeType":"81","messageId":"82","endLine":29,"endColumn":75},{"ruleId":"83","severity":1,"message":"84","line":57,"column":37,"nodeType":"85","endLine":57,"endColumn":120},{"ruleId":"83","severity":1,"message":"86","line":58,"column":37,"nodeType":"85","endLine":58,"endColumn":75},{"ruleId":"83","severity":1,"message":"84","line":59,"column":37,"nodeType":"85","endLine":62,"endColumn":40},{"ruleId":"79","severity":1,"message":"87","line":119,"column":70,"nodeType":"88","messageId":"82","endLine":119,"endColumn":72},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]